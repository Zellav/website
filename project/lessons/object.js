// рекомендуемо к прочтению   https://learn.javascript.ru/object


let user = new Object()    // синтаксис "конструктор объекта"
let user = {}              // синтаксис "литерал объекта"



let user = {                // объект
    name: "John",           // под ключом "name" хранится значение "John"
    age: 30,                // под ключом "age" хранится значение 30
    5: 5,                   // ключ в виде числа
    "foo baz": 'bar'        // имя свойства из нескольких слов должно быть в кавычках
}
//[*] Значение может быть любого типа. Как и примитивного типа данных так и к примеру обьектом, массивом и.п



// Удаление свойства из обьекта 
delete user.age


// Объект, объявленный через const, его свойства свободно могут изменяться.
const user = {
    name: "John"
}

user.name = "Pete"

// Для свойств, имена которых состоят из нескольких слов, либо в которых ключами являються числа, доступ к значению «через точку» не работает:
user["likes birds"] = true
user[5] = 'five'

// Квадратные скобки также позволяют обратиться к свойству, имя которого может быть результатом выражения. 
// Например, имя свойства может храниться в переменной:
let key = "name"
user[key] = 'Ivan'


// Мы можем использовать квадратные скобки в литеральной нотации(при обьявлении обьекта) для создания вычисляемого свойства.
let fruit = 'apple'
let bag = {
    [fruit]: 5,                 // имя свойства будет взято из переменной fruit
}
// более сложный способ
let bag = {
    [fruit + 'Computers']: 5    // bag.appleComputers = 5
}


//Квадратные скобки дают намного больше возможностей, чем запись через точку. 
//Они позволяют использовать любые имена свойств и переменные, хотя и требуют более громоздких конструкций кода